generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cart {
  id        Int       @id @default(autoincrement())
  productId Int?
  userId    Int?
  qty       Int?
  total     Int?
  createdAt DateTime? @default(now()) @db.Timestamptz(6)
  updatedAt DateTime? @db.Timestamptz(6)
  product   product?  @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users     users?    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model category {
  id              Int               @id @default(autoincrement())
  name            String?           @db.VarChar
  createdAt       DateTime?         @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime?         @db.Timestamptz(6)
  productCategory productCategory[]
}

model chat {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime? @default(now()) @db.Timestamptz(6)
  updatedAt  DateTime? @db.Timestamptz(6)
  formUserId Int?
  message    String?
  toUserId   Int?
  users      users?    @relation(fields: [formUserId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model deliveryMethod {
  id              Int               @id @default(autoincrement())
  picture         String?           @db.VarChar
  createdAt       DateTime?         @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime?         @db.Timestamptz(6)
  productDelivery productDelivery[]
}

model paymentMethod {
  id          Int           @id @default(autoincrement())
  picture     String?       @db.VarChar
  name        String?       @db.VarChar
  createdAt   DateTime?     @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime?     @db.Timestamptz(6)
  transaction transaction[]
}

model product {
  id              Int               @id @default(autoincrement())
  createdAt       DateTime?         @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime?         @db.Timestamptz(6)
  name            String?           @db.VarChar
  price           Int?
  description     String?
  stock           Int?
  deliveryStart   DateTime?         @db.Timestamptz(6)
  deliveryEnd     DateTime?         @db.Timestamptz(6)
  picture         String?           @db.VarChar
  cart            cart[]
  productCategory productCategory[]
  productDelivery productDelivery[]
  productSize     productSize[]
  transaction     transaction[]
}

model productCategory {
  id         Int       @id @default(autoincrement())
  productId  Int?
  categoryId Int?
  createdAt  DateTime? @default(now()) @db.Timestamptz(6)
  updatedAt  DateTime? @db.Timestamptz(6)
  category   category? @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product    product?  @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model productDelivery {
  id             Int             @id @default(autoincrement())
  productId      Int?
  deleveryId     Int?
  createdAt      DateTime?       @default(now()) @db.Timestamptz(6)
  updatedAt      DateTime?       @db.Timestamptz(6)
  deliveryMethod deliveryMethod? @relation(fields: [deleveryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product        product?        @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model productSize {
  id        Int       @id @default(autoincrement())
  productId Int?
  sizeId    Int?
  createdAt DateTime? @default(now()) @db.Timestamptz(6)
  updatedAt DateTime? @db.Timestamptz(6)
  product   product?  @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  size      size?     @relation(fields: [sizeId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model size {
  id          Int           @id @default(autoincrement())
  name        String?       @db.VarChar
  createdAt   DateTime?     @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime?     @db.Timestamptz(6)
  productSize productSize[]
}

model transaction {
  id            Int            @id @default(autoincrement())
  userId        Int?
  productId     Int?
  qty           Int?
  total         Int?
  paymentId     Int?
  createdAt     DateTime?      @default(now()) @db.Timestamptz(6)
  updatedAt     DateTime?      @db.Timestamptz(6)
  paymentMethod paymentMethod? @relation(fields: [paymentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product       product?       @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users         users?         @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id          Int           @id @default(autoincrement())
  nickName    String?       @db.VarChar
  firstName   String?       @db.VarChar
  lastName    String?       @db.VarChar
  address     String?       @db.VarChar
  email       String?       @unique @db.VarChar
  password    String?       @db.VarChar
  phoneNumber String?       @unique @db.VarChar
  gender      String?       @db.VarChar
  birthdate   DateTime?     @db.Date
  picture     String?       @db.VarChar
  isAdmin     String?       @default("false") @db.VarChar
  createdAt   DateTime?     @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime?     @db.Timestamptz(6)
  cart        cart[]
  chat        chat[]
  transaction transaction[]
}
